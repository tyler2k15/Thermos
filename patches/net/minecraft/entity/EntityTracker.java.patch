--- ../src-base/minecraft/net/minecraft/entity/EntityTracker.java
+++ ../src-work/minecraft/net/minecraft/entity/EntityTracker.java
@@ -3,6 +3,7 @@
 import java.util.ArrayList;
 import java.util.HashSet;
 import java.util.Iterator;
+import java.util.Collections;
 import java.util.Set;
 import java.util.concurrent.Callable;
 import net.minecraft.crash.CrashReport;
@@ -38,6 +39,7 @@
 import net.minecraft.world.chunk.Chunk;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import net.minecraft.server.MinecraftServer; // Spigot
 
 import cpw.mods.fml.common.registry.EntityRegistry;
 
@@ -45,8 +47,8 @@
 {
     private static final Logger logger = LogManager.getLogger();
     private final WorldServer theWorld;
-    private Set trackedEntities = new HashSet();
-    private IntHashMap trackedEntityIDs = new IntHashMap();
+    private Set<EntityTrackerEntry> trackedEntities = new HashSet<EntityTrackerEntry>(); 
+    public IntHashMap trackedEntityIDs = new IntHashMap(); // CraftBukkit - private -> public
     private int entityViewDistance;
     private static final String __OBFID = "CL_00001431";
 
@@ -67,13 +69,10 @@
         {
             this.addEntityToTracker(p_72786_1_, 512, 2);
             EntityPlayerMP entityplayermp = (EntityPlayerMP)p_72786_1_;
-            Iterator iterator = this.trackedEntities.iterator();
 
-            while (iterator.hasNext())
+            for(EntityTrackerEntry entitytrackerentry  : this.trackedEntities)
             {
-                EntityTrackerEntry entitytrackerentry = (EntityTrackerEntry)iterator.next();
-
-                if (entitytrackerentry.myEntity != entityplayermp)
+                if (entitytrackerentry != null && entitytrackerentry.myEntity != entityplayermp)
                 {
                     entitytrackerentry.tryStartWachingThis(entityplayermp);
                 }
@@ -182,8 +181,9 @@
         this.addEntityToTracker(p_72791_1_, p_72791_2_, p_72791_3_, false);
     }
 
-    public void addEntityToTracker(Entity p_72785_1_, int p_72785_2_, final int p_72785_3_, boolean p_72785_4_)
+    public synchronized void addEntityToTracker(Entity p_72785_1_, int p_72785_2_, final int p_72785_3_, boolean p_72785_4_)
     {
+        p_72785_2_ = org.spigotmc.TrackingRange.getEntityTrackingRange(p_72785_1_, p_72785_2_); // Spigot
         if (p_72785_2_ > this.entityViewDistance)
         {
             p_72785_2_ = this.entityViewDistance;
@@ -193,6 +193,11 @@
         {
             if (this.trackedEntityIDs.containsItem(p_72785_1_.getEntityId()))
             {
+            	if(!this.trackedEntities.contains(new EntityTrackerEntry(p_72785_1_, p_72785_2_, p_72785_3_, p_72785_4_)))
+            	{
+            		this.trackedEntityIDs.removeObject(p_72785_1_.getEntityId());
+            		System.out.println("[Thermos] Entity tracking error corection code activated.");
+            	}
                 throw new IllegalStateException("Entity is already tracked!");
             }
 
@@ -223,7 +228,9 @@
             });
             p_72785_1_.addEntityCrashInfo(crashreportcategory);
             CrashReportCategory crashreportcategory1 = crashreport.makeCategory("Entity That Is Already Tracked");
+            try {
             ((EntityTrackerEntry)this.trackedEntityIDs.lookup(p_72785_1_.getEntityId())).myEntity.addEntityCrashInfo(crashreportcategory1);
+            } catch(Exception ignored) {}
 
             try
             {
@@ -241,11 +248,9 @@
         if (p_72790_1_ instanceof EntityPlayerMP)
         {
             EntityPlayerMP entityplayermp = (EntityPlayerMP)p_72790_1_;
-            Iterator iterator = this.trackedEntities.iterator();
-
-            while (iterator.hasNext())
+            for(EntityTrackerEntry entitytrackerentry : this.trackedEntities )
             {
-                EntityTrackerEntry entitytrackerentry = (EntityTrackerEntry)iterator.next();
+                if (entitytrackerentry != null)
                 entitytrackerentry.removeFromWatchingList(entityplayermp);
             }
         }
@@ -261,18 +266,17 @@
 
     public void updateTrackedEntities()
     {
-        ArrayList arraylist = new ArrayList();
-        Iterator iterator = this.trackedEntities.iterator();
-
-        while (iterator.hasNext())
+        ArrayList arraylist = new ArrayList(this.trackedEntities.size());
+        for (EntityTrackerEntry entitytrackerentry : this.trackedEntities)
         {
-            EntityTrackerEntry entitytrackerentry = (EntityTrackerEntry)iterator.next();
+            if (entitytrackerentry != null) {
             entitytrackerentry.sendLocationToAllClients(this.theWorld.playerEntities);
 
             if (entitytrackerentry.playerEntitiesUpdated && entitytrackerentry.myEntity instanceof EntityPlayerMP)
             {
                 arraylist.add((EntityPlayerMP)entitytrackerentry.myEntity);
             }
+            }
         }
 
         for (int i = 0; i < arraylist.size(); ++i)
@@ -284,7 +288,7 @@
             {
                 EntityTrackerEntry entitytrackerentry1 = (EntityTrackerEntry)iterator1.next();
 
-                if (entitytrackerentry1.myEntity != entityplayermp)
+                if (entitytrackerentry1 != null && entitytrackerentry1.myEntity != entityplayermp)
                 {
                     entitytrackerentry1.tryStartWachingThis(entityplayermp);
                 }
@@ -319,19 +323,16 @@
         while (iterator.hasNext())
         {
             EntityTrackerEntry entitytrackerentry = (EntityTrackerEntry)iterator.next();
+            if (entitytrackerentry != null)
             entitytrackerentry.removePlayerFromTracker(p_72787_1_);
         }
     }
 
     public void func_85172_a(EntityPlayerMP p_85172_1_, Chunk p_85172_2_)
     {
-        Iterator iterator = this.trackedEntities.iterator();
-
-        while (iterator.hasNext())
+        for (EntityTrackerEntry entitytrackerentry : this.trackedEntities)
         {
-            EntityTrackerEntry entitytrackerentry = (EntityTrackerEntry)iterator.next();
-
-            if (entitytrackerentry.myEntity != p_85172_1_ && entitytrackerentry.myEntity.chunkCoordX == p_85172_2_.xPosition && entitytrackerentry.myEntity.chunkCoordZ == p_85172_2_.zPosition)
+            if (entitytrackerentry != null && entitytrackerentry.myEntity != p_85172_1_ && entitytrackerentry.myEntity.chunkCoordX == p_85172_2_.xPosition && entitytrackerentry.myEntity.chunkCoordZ == p_85172_2_.zPosition)
             {
                 entitytrackerentry.tryStartWachingThis(p_85172_1_);
             }
